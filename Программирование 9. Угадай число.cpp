// Программирование 9. Угадай число.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include "pch.h"
#include <iostream>
#include <conio.h>
#include <ctime> // Библиотека с функцией time()
#include <Windows.h> // Библиотека с функцией Sleep()
int main()
{
	srand(time(NULL)); // функция srand() создаёт случайное зерно с помощью функции time (которое считывает данное календарное время)
	setlocale(LC_ALL, "Russian");
	int otvet = 1; // Создаём переменную для заключения в цикл программы
	while (otvet == 1) // Основной цикл
	{
		std::cout << "Сейчас я загадаю число, а ты должен его угадать :3" << std::endl;
		
		{						
			std::cout << "Х";//Проблема такого метода создания псевдослучайных чисел в том, что всё основывается на времени,
			Sleep(500);		 //то есть на постоянно увеличивающихся числах. Таким образом, при повторных быстрых запусках
			std::cout << "м";//случайное число не будет таким случайным, оно будет больше предыдущего случайного, пока не
			Sleep(500);		 //дойдет до 100 - далее начнет с нуля. Этот текст не даёт пользователю быстро играть в "Угадай число"
			std::cout << "м";
			Sleep(500);
			std::cout << ".";
			Sleep(500);
			std::cout << ".";
			Sleep(500);
			std::cout << "." << std::endl;
		}
		int my = rand() % 101; // rand() используя зерно srand() создает случайное число в диапазоне от 0 до 100
		std::cout << "Всё, загадал, теперь угадай <3 " << std::endl;
		int your;
		for (int i = 1; i < 7; i++) // цикл "угадывания"
		{
			if (i < 6) //пока не пройдет 5 попыток компьютер продолжит рассматривать числа (или пока не угадает пользователь)
			{
				std::cin >> your;
				if (your < my) std::cout << " Неа, у меня больше :) " << std::endl;
				else if (your > my) std::cout << " У тебя великовато вышло :Р " << std::endl;
				else if (your == my)
				{
					std::cout << " Угадал! :D " << std::endl;
					break;
				}
			}
			else std::cout << " Вот и всё! Моим числом было " << my << std::endl; // но если идет 6 шаг - компьютер завершает рассмотрение
		}
		std::cout << "Хочешь попытаться еще? ;) (1 - да; 2 - нет)" << std::endl;
		std::cin >> otvet; //ввод ответа для конца или продолжения главного цикла
	}
	_getch();
}

